# Create port_slicer
cell pavel-demin:user:port_slicer slice_0 {
  DIN_WIDTH 8 DIN_FROM 0 DIN_TO 0
}

for {set i 0} {$i <= 7} {incr i} {

  # Create port_slicer
  cell pavel-demin:user:port_slicer slice_[expr $i + 1] {
    DIN_WIDTH 288 DIN_FROM [expr $i] DIN_TO [expr $i]
  }

  # Create port_selector
  cell pavel-demin:user:port_selector selector_$i {
    DOUT_WIDTH 16
  } {
    cfg slice_[expr $i + 1]/dout
    din /adc_0/m_axis_tdata
  }

  # Create port_slicer
  cell pavel-demin:user:port_slicer slice_[expr $i + 9] {
    DIN_WIDTH 288 DIN_FROM [expr 32 * $i + 63] DIN_TO [expr 32 * $i + 32]
  }

  # Create axis_constant
  cell pavel-demin:user:axis_constant phase_$i {
    AXIS_TDATA_WIDTH 32
  } {
    cfg_data slice_[expr $i + 9]/dout
    aclk /pll_0/clk_out1
  }

  # Create dds_compiler
  cell xilinx.com:ip:dds_compiler dds_$i {
    DDS_CLOCK_RATE 125
    SPURIOUS_FREE_DYNAMIC_RANGE 138
    FREQUENCY_RESOLUTION 0.2
    PHASE_INCREMENT Streaming
    HAS_PHASE_OUT false
    PHASE_WIDTH 30
    OUTPUT_WIDTH 24
    DSP48_USE Minimal
    NEGATIVE_SINE true
  } {
    S_AXIS_PHASE phase_$i/M_AXIS
    aclk /pll_0/clk_out1
  }

}

# Create xlconstant
cell xilinx.com:ip:xlconstant const_0

for {set i 0} {$i <= 15} {incr i} {

  # Create port_slicer
  cell pavel-demin:user:port_slicer dds_slice_$i {
    DIN_WIDTH 48 DIN_FROM [expr 24 * ($i % 2) + 23] DIN_TO [expr 24 * ($i % 2)]
  } {
    din dds_[expr $i / 2]/m_axis_data_tdata
  }

  # Create dsp48
  cell pavel-demin:user:dsp48 mult_$i {
    A_WIDTH 24
    B_WIDTH 16
    P_WIDTH 24
  } {
    A dds_slice_$i/dout
    B selector_[expr $i / 2]/dout
    CLK /pll_0/clk_out1
  }

  # Create cic_compiler
  cell xilinx.com:ip:cic_compiler cic_$i {
    INPUT_DATA_WIDTH.VALUE_SRC USER
    FILTER_TYPE Decimation
    NUMBER_OF_STAGES 6
    SAMPLE_RATE_CHANGES Fixed
    FIXED_OR_INITIAL_RATE 125
    INPUT_SAMPLE_FREQUENCY 125
    CLOCK_FREQUENCY 125
    INPUT_DATA_WIDTH 24
    QUANTIZATION Truncation
    OUTPUT_DATA_WIDTH 32
    USE_XTREME_DSP_SLICE false
    HAS_DOUT_TREADY true
    HAS_ARESETN true
  } {
    s_axis_data_tdata mult_$i/P
    s_axis_data_tvalid const_0/dout
    aclk /pll_0/clk_out1
    aresetn /rst_0/peripheral_aresetn
  }

}

# Create axis_combiner
cell  xilinx.com:ip:axis_combiner comb_0 {
  TDATA_NUM_BYTES.VALUE_SRC USER
  TDATA_NUM_BYTES 4
  NUM_SI 16
} {
  S00_AXIS cic_0/M_AXIS_DATA
  S01_AXIS cic_1/M_AXIS_DATA
  S02_AXIS cic_2/M_AXIS_DATA
  S03_AXIS cic_3/M_AXIS_DATA
  S04_AXIS cic_4/M_AXIS_DATA
  S05_AXIS cic_5/M_AXIS_DATA
  S06_AXIS cic_6/M_AXIS_DATA
  S07_AXIS cic_7/M_AXIS_DATA
  S08_AXIS cic_8/M_AXIS_DATA
  S09_AXIS cic_9/M_AXIS_DATA
  S10_AXIS cic_10/M_AXIS_DATA
  S11_AXIS cic_11/M_AXIS_DATA
  S12_AXIS cic_12/M_AXIS_DATA
  S13_AXIS cic_13/M_AXIS_DATA
  S14_AXIS cic_14/M_AXIS_DATA
  S15_AXIS cic_15/M_AXIS_DATA
  aclk /pll_0/clk_out1
  aresetn /rst_0/peripheral_aresetn
}

# Create axis_dwidth_converter
cell xilinx.com:ip:axis_dwidth_converter conv_0 {
  S_TDATA_NUM_BYTES.VALUE_SRC USER
  S_TDATA_NUM_BYTES 64
  M_TDATA_NUM_BYTES 4
} {
  S_AXIS comb_0/M_AXIS
  aclk /pll_0/clk_out1
  aresetn /rst_0/peripheral_aresetn
}

# Create cic_compiler
cell xilinx.com:ip:cic_compiler cic_16 {
  INPUT_DATA_WIDTH.VALUE_SRC USER
  FILTER_TYPE Decimation
  NUMBER_OF_STAGES 6
  SAMPLE_RATE_CHANGES Fixed
  FIXED_OR_INITIAL_RATE 125
  INPUT_SAMPLE_FREQUENCY 1
  CLOCK_FREQUENCY 125
  NUMBER_OF_CHANNELS 16
  INPUT_DATA_WIDTH 32
  QUANTIZATION Truncation
  OUTPUT_DATA_WIDTH 32
  USE_XTREME_DSP_SLICE false
  HAS_DOUT_TREADY true
  HAS_ARESETN true
} {
  S_AXIS_DATA conv_0/M_AXIS
  aclk /pll_0/clk_out1
  aresetn /rst_0/peripheral_aresetn
}

# Create fir_compiler
cell xilinx.com:ip:fir_compiler fir_0 {
  DATA_WIDTH.VALUE_SRC USER
  DATA_WIDTH 32
  COEFFICIENTVECTOR {-2.6228467952e-08, -1.4574358929e-08, 2.3543695369e-08, 9.9092790354e-09, -1.1896588702e-08, 3.6929705567e-09, -1.1338098136e-08, -3.0451016420e-08, 4.8795105376e-08, 7.5492461243e-08, -1.0301368392e-07, -1.4490799001e-07, 1.7626337634e-07, 2.4574103739e-07, -2.7036555849e-07, -3.8594483613e-07, 3.8648764906e-07, 5.7427340467e-07, -5.2494497479e-07, -8.2012931691e-07, 6.8499121672e-07, 1.1333394852e-06, -8.6462696793e-07, -1.5238743098e-06, 1.0604137626e-06, 2.0014773411e-06, -1.2673395387e-06, -2.5752368503e-06, 1.4787085154e-06, 3.2530046633e-06, -1.6863164869e-06, -4.0411862513e-06, 1.8800315801e-06, 4.9436171306e-06, -2.0483890460e-06, -5.9612282054e-06, 2.1786654588e-06, 7.0912929255e-06, -2.2572758872e-06, -8.3267700053e-06, 2.2702229800e-06, 9.6555744449e-06, -2.2037788390e-06, -1.1059981315e-05, 2.0452324124e-06, 1.2516046799e-05, -1.7838165965e-06, -1.3993183245e-05, 1.4116852186e-06, 1.5453769228e-05, -9.2508889433e-07, -1.6852978894e-05, 3.2553406043e-07, 1.8138385934e-05, 3.7787240264e-07, -1.9251981241e-05, -1.1694578398e-06, 2.0128040382e-05, 2.0232724574e-06, -2.0695563141e-05, -2.9026772967e-06, 2.0878965973e-05, 3.7589847906e-06, -2.0599531051e-05, -4.5304963360e-06, 1.9776898861e-05, 5.1414321579e-06, -1.8331164946e-05, -5.5013626089e-06, 1.6185099983e-05, 5.5048325172e-06, -1.3266802502e-05, -5.0316213320e-06, 9.5122917885e-06, 3.9472252839e-06, -4.8684279306e-06, -2.1042196422e-06, -7.0551142894e-07, -6.5977220535e-07, 7.2283397386e-06, 4.5111420770e-06, -1.4703448211e-05, -9.6259300983e-06, 2.3109766372e-05, 1.6182866453e-05, -3.2400415129e-05, -2.4359451488e-05, 4.2500232890e-05, 3.4326733195e-05, -5.3304337001e-05, -4.6244130350e-05, 6.4676567627e-05, 6.0253080085e-05, -7.6449032541e-05, -7.6470447592e-05, 8.8422093003e-05, 9.4980902191e-05, -1.0036595015e-04, -1.1582940806e-04, 1.1202304379e-04, 1.3901255699e-04, -1.2311582411e-04, -1.6448155222e-04, 1.3333223603e-04, 1.9210821875e-04, -1.4236038252e-04, -2.2170309998e-04, 1.4987725463e-04, 2.5299793514e-04, -1.5556135282e-04, -2.8563988961e-04, 1.5910252860e-04, 3.1918532626e-04, -1.6021403444e-04, -3.5309583819e-04, 1.5864447831e-04, 3.8673442490e-04, -1.5419166852e-04, -4.1936367450e-04, 1.4671674822e-04, 4.5014445679e-04, -1.3616043910e-04, -4.7813710115e-04, 1.2255990495e-04, 5.0230249225e-04, -1.0607722371e-04, -5.2153685342e-04, 8.6964435379e-05, 5.3460804289e-04, -6.5659025686e-05, -5.4023544946e-04, 4.2750114247e-05, 5.3707348171e-04, -1.9005927437e-05, -5.2372750615e-04, -4.6100272619e-06, 4.9876953417e-04, 2.6922731164e-05, -4.6075761520e-04, -4.6532645323e-05, 4.0825527012e-04, 6.1802750303e-05, -3.3985345759e-04, -7.0848150331e-05, 2.5419203879e-04, 7.1525120008e-05, -1.4998280145e-04, -6.1420408917e-05, 2.6029069945e-05, 3.7813100409e-05, 1.1867045239e-04, 2.1928109864e-06, -2.8508635510e-04, -6.1883753976e-05, 4.7394481259e-04, 1.4480548866e-04, -6.8577936434e-04, -2.5479838202e-04, 9.2090270898e-04, 3.9600667456e-04, -1.1793841776e-03, -5.7289019857e-04, 1.4610273411e-03, 7.9023742880e-04, -1.7653522285e-03, -1.0531865774e-03, 2.0915785087e-03, 1.3672539449e-03, -2.4386139607e-03, -1.7383774609e-03, 2.8050470701e-03, 2.1729838085e-03, -3.1891510489e-03, -2.6781614927e-03, 3.5886416605e-03, 3.2613612137e-03, -4.0012338468e-03, -3.9311756177e-03, 4.4240677681e-03, 4.6971408691e-03, -4.8539229235e-03, -5.5701104514e-03, 5.2871828742e-03, 6.5626529837e-03, -5.7197964106e-03, -7.6895896706e-03, 6.1472189107e-03, 8.9687345280e-03, -6.5643237629e-03, -1.0421934629e-02, 6.9652583956e-03, 1.2076546974e-02, -7.3432182243e-03, -1.3967581506e-02, 7.6900935374e-03, 1.6140913666e-02, -7.9959015845e-03, -1.8658521171e-02, 8.2466225832e-03, 2.1604073722e-02, -8.4249867453e-03, -2.5098085454e-02, 8.5043882781e-03, 2.9316604728e-02, -8.4433999918e-03, -3.4528296176e-02, 8.1722693834e-03, 4.1163792675e-02, -7.5630773648e-03, -4.9957115279e-02, 6.3563757895e-03, 6.2263662972e-02, -3.9542182792e-03, -8.0872688884e-02, -1.2851589814e-03, 1.1247962941e-01, 1.5221833705e-02, -1.7733079789e-01, -7.0454670526e-02, 3.6096548469e-01, 6.1538537167e-01, 3.6096548469e-01, -7.0454670526e-02, -1.7733079789e-01, 1.5221833705e-02, 1.1247962941e-01, -1.2851589814e-03, -8.0872688884e-02, -3.9542182792e-03, 6.2263662972e-02, 6.3563757895e-03, -4.9957115279e-02, -7.5630773648e-03, 4.1163792675e-02, 8.1722693834e-03, -3.4528296176e-02, -8.4433999918e-03, 2.9316604728e-02, 8.5043882781e-03, -2.5098085454e-02, -8.4249867453e-03, 2.1604073722e-02, 8.2466225832e-03, -1.8658521171e-02, -7.9959015845e-03, 1.6140913666e-02, 7.6900935374e-03, -1.3967581506e-02, -7.3432182243e-03, 1.2076546974e-02, 6.9652583956e-03, -1.0421934629e-02, -6.5643237629e-03, 8.9687345280e-03, 6.1472189107e-03, -7.6895896706e-03, -5.7197964106e-03, 6.5626529837e-03, 5.2871828742e-03, -5.5701104514e-03, -4.8539229235e-03, 4.6971408691e-03, 4.4240677681e-03, -3.9311756177e-03, -4.0012338468e-03, 3.2613612137e-03, 3.5886416605e-03, -2.6781614927e-03, -3.1891510489e-03, 2.1729838085e-03, 2.8050470701e-03, -1.7383774609e-03, -2.4386139607e-03, 1.3672539449e-03, 2.0915785087e-03, -1.0531865774e-03, -1.7653522285e-03, 7.9023742880e-04, 1.4610273411e-03, -5.7289019857e-04, -1.1793841776e-03, 3.9600667456e-04, 9.2090270898e-04, -2.5479838202e-04, -6.8577936434e-04, 1.4480548866e-04, 4.7394481259e-04, -6.1883753976e-05, -2.8508635510e-04, 2.1928109864e-06, 1.1867045239e-04, 3.7813100409e-05, 2.6029069945e-05, -6.1420408917e-05, -1.4998280145e-04, 7.1525120008e-05, 2.5419203879e-04, -7.0848150331e-05, -3.3985345759e-04, 6.1802750303e-05, 4.0825527012e-04, -4.6532645323e-05, -4.6075761520e-04, 2.6922731164e-05, 4.9876953417e-04, -4.6100272619e-06, -5.2372750615e-04, -1.9005927437e-05, 5.3707348171e-04, 4.2750114247e-05, -5.4023544946e-04, -6.5659025686e-05, 5.3460804289e-04, 8.6964435379e-05, -5.2153685342e-04, -1.0607722371e-04, 5.0230249225e-04, 1.2255990495e-04, -4.7813710115e-04, -1.3616043910e-04, 4.5014445679e-04, 1.4671674822e-04, -4.1936367450e-04, -1.5419166852e-04, 3.8673442490e-04, 1.5864447831e-04, -3.5309583819e-04, -1.6021403444e-04, 3.1918532626e-04, 1.5910252860e-04, -2.8563988961e-04, -1.5556135282e-04, 2.5299793514e-04, 1.4987725463e-04, -2.2170309998e-04, -1.4236038252e-04, 1.9210821875e-04, 1.3333223603e-04, -1.6448155222e-04, -1.2311582411e-04, 1.3901255699e-04, 1.1202304379e-04, -1.1582940806e-04, -1.0036595015e-04, 9.4980902191e-05, 8.8422093003e-05, -7.6470447592e-05, -7.6449032541e-05, 6.0253080085e-05, 6.4676567627e-05, -4.6244130350e-05, -5.3304337001e-05, 3.4326733195e-05, 4.2500232890e-05, -2.4359451488e-05, -3.2400415129e-05, 1.6182866453e-05, 2.3109766372e-05, -9.6259300983e-06, -1.4703448211e-05, 4.5111420770e-06, 7.2283397386e-06, -6.5977220535e-07, -7.0551142894e-07, -2.1042196422e-06, -4.8684279306e-06, 3.9472252839e-06, 9.5122917885e-06, -5.0316213320e-06, -1.3266802502e-05, 5.5048325172e-06, 1.6185099983e-05, -5.5013626089e-06, -1.8331164946e-05, 5.1414321579e-06, 1.9776898861e-05, -4.5304963360e-06, -2.0599531051e-05, 3.7589847906e-06, 2.0878965973e-05, -2.9026772967e-06, -2.0695563141e-05, 2.0232724574e-06, 2.0128040382e-05, -1.1694578398e-06, -1.9251981241e-05, 3.7787240264e-07, 1.8138385934e-05, 3.2553406043e-07, -1.6852978894e-05, -9.2508889433e-07, 1.5453769228e-05, 1.4116852186e-06, -1.3993183245e-05, -1.7838165965e-06, 1.2516046799e-05, 2.0452324124e-06, -1.1059981315e-05, -2.2037788390e-06, 9.6555744449e-06, 2.2702229800e-06, -8.3267700053e-06, -2.2572758872e-06, 7.0912929255e-06, 2.1786654588e-06, -5.9612282054e-06, -2.0483890460e-06, 4.9436171306e-06, 1.8800315801e-06, -4.0411862513e-06, -1.6863164869e-06, 3.2530046633e-06, 1.4787085154e-06, -2.5752368503e-06, -1.2673395387e-06, 2.0014773411e-06, 1.0604137626e-06, -1.5238743098e-06, -8.6462696793e-07, 1.1333394852e-06, 6.8499121672e-07, -8.2012931691e-07, -5.2494497479e-07, 5.7427340467e-07, 3.8648764906e-07, -3.8594483613e-07, -2.7036555849e-07, 2.4574103739e-07, 1.7626337634e-07, -1.4490799001e-07, -1.0301368392e-07, 7.5492461243e-08, 4.8795105376e-08, -3.0451016420e-08, -1.1338098136e-08, 3.6929705567e-09, -1.1896588702e-08, 9.9092790354e-09, 2.3543695369e-08, -1.4574358929e-08, -2.6228467952e-08}
  COEFFICIENT_WIDTH 32
  QUANTIZATION Maximize_Dynamic_Range
  BESTPRECISION true
  FILTER_TYPE Decimation
  DECIMATION_RATE 2
  NUMBER_CHANNELS 16
  NUMBER_PATHS 1
  SAMPLE_FREQUENCY 0.008
  CLOCK_FREQUENCY 125
  OUTPUT_ROUNDING_MODE Convergent_Rounding_to_Even
  OUTPUT_WIDTH 33
  M_DATA_HAS_TREADY true
  HAS_ARESETN true
} {
  S_AXIS_DATA cic_16/M_AXIS_DATA
  aclk /pll_0/clk_out1
  aresetn /rst_0/peripheral_aresetn
}

# Create axis_subset_converter
cell xilinx.com:ip:axis_subset_converter subset_0 {
  S_TDATA_NUM_BYTES.VALUE_SRC USER
  M_TDATA_NUM_BYTES.VALUE_SRC USER
  S_TDATA_NUM_BYTES 5
  M_TDATA_NUM_BYTES 4
  TDATA_REMAP {tdata[31:0]}
} {
  S_AXIS fir_0/M_AXIS_DATA
  aclk /pll_0/clk_out1
  aresetn /rst_0/peripheral_aresetn
}

# Create floating_point
cell xilinx.com:ip:floating_point fp_0 {
  OPERATION_TYPE Fixed_to_float
  A_PRECISION_TYPE.VALUE_SRC USER
  C_A_EXPONENT_WIDTH.VALUE_SRC USER
  C_A_FRACTION_WIDTH.VALUE_SRC USER
  A_PRECISION_TYPE Custom
  C_A_EXPONENT_WIDTH 2
  C_A_FRACTION_WIDTH 30
  RESULT_PRECISION_TYPE Single
  HAS_ARESETN true
} {
  S_AXIS_A subset_0/M_AXIS
  aclk /pll_0/clk_out1
  aresetn /rst_0/peripheral_aresetn
}

# Create axis_dwidth_converter
cell xilinx.com:ip:axis_dwidth_converter conv_1 {
  S_TDATA_NUM_BYTES.VALUE_SRC USER
  S_TDATA_NUM_BYTES 4
  M_TDATA_NUM_BYTES 64
} {
  S_AXIS fp_0/M_AXIS_RESULT
  aclk /pll_0/clk_out1
  aresetn /rst_0/peripheral_aresetn
}

# Create axis_fifo
cell pavel-demin:user:axis_fifo fifo_0 {
  S_AXIS_TDATA_WIDTH 512
  M_AXIS_TDATA_WIDTH 512
  WRITE_DEPTH 1024
  ALWAYS_READY TRUE
} {
  S_AXIS conv_1/M_AXIS
  aclk /pll_0/clk_out1
  aresetn slice_0/dout
}

# Create axis_dwidth_converter
cell xilinx.com:ip:axis_dwidth_converter conv_2 {
  S_TDATA_NUM_BYTES.VALUE_SRC USER
  S_TDATA_NUM_BYTES 64
  M_TDATA_NUM_BYTES 4
} {
  S_AXIS fifo_0/M_AXIS
  aclk /pll_0/clk_out1
  aresetn slice_0/dout
}
